resource_types:
  - name: discord-resource
    type: registry-image
    source:
      repository: trivigy/discord-resource
  
  
  
resources:
  - name: dillo-bot
    type: git
    icon: github
    source:
      uri: ((github.uri))
      branch: ((github.branch))

  - name: dillo-bot-release
    type: github-release
    icon: github
    source:
      owner: ((github.owner))
      repository: ((github.repository))
      access_token: ((github.token))

  - name: notify
    type: discord-resource
    icon: discord
    source:
      token: ((concourse.discord.token))

  - name: dillo-bot-bucket
    type: s3
    icon: aws
    check_every: 30m
    source:
      bucket: ((aws.s3.name))
      regexp: dillo-bot-(.*).jar
      access_key_id: ((aws.s3.key.id))
      secret_access_key: ((aws.s3.key.secret))
      region_name: ((aws.s3.region))

  - name: dillo-bot-image
    type: docker-image
    icon: docker
    source: 
      username: ((docker.username))
      password: ((docker.password))
      repository: ((docker.username))/dillo-bot

  - name: dillo-bot-resource-image
    type: docker-image
    icon: docker
    source:
      username: ((docker.username))
      password: ((docker.password))
      repository: ((docker.username))/dillo-bot-resource

  - name: general-resource-image
    type: docker-image
    icon: docker
    source:
      username: ((docker.username))
      password: ((docker.password))
      repository: ((docker.username))/general-resource

  - name: version
    type: semver
    icon: information-outline
    check_every: 9999h
    source:
      initial_version: 0.0.0
      driver: s3
      bucket: ((aws.s3.name))
      key: version
      access_key_id: ((aws.s3.key.id))
      secret_access_key: ((aws.s3.key.secret))
      region_name: ((aws.s3.region))

  - name: vars
    type: s3
    icon: cog
    check_every: 1h
    source:
      bucket: ((aws.s3.name))
      regexp: vars-(.*).yml
      access_key_id: ((aws.s3.key.id))
      secret_access_key: ((aws.s3.key.secret))
      region_name: ((aws.s3.region))

  - name: debian-stable-slim-trigger
    type: docker-image
    icon: docker
    source:
      repository: debian
      tag: stable-slim

  - name: openjdk-14.0.2-slim-trigger
    type: docker-image
    icon: docker
    source:
      repository: openjdk
      tag: 14.0.2-slim

  - name: time-trigger
    type: time
    icon: clock-outline
    source:
      interval: 96h



anchors:
  - &default_job_config
    build_log_retention:
      builds: 12
      minimum_succeeded_builds: 3
    serial: true

  - &env_vars
    DISCORD_TOKEN: ((discord.token))
    DISCORD_CLIENT_ID: ((discord.client.id))
    GITHUB_TOKEN: ((github.token))
    DB_URI: ((database.uri))
    DB_USER: ((database.user))
    DB_PASSWORD: ((database.password))
    DB_DRIVER: ((database.driver))

  - &test_env_vars
    DISCORD_TOKEN: ((discord.token))
    DISCORD_CLIENT_ID: ((discord.client.id))
    GITHUB_TOKEN: ((github.token))
    DB_URI: jdbc:h2:mem:db
    DB_USER: sa
    DB_PASSWORD: 
    DB_DRIVER: org.h2.Driver

  - &ssh_creds
    USER: ((aws.ec2.user))
    HOST: ((aws.ec2.public_dns))


jobs:
  - name: update-pipeline
    <<: *default_job_config
    plan:
      - get: dillo-bot
        trigger: true

      - get: vars
        trigger: true

      - set_pipeline: self
        file: dillo-bot/cicd/pipelines/dillo-bot.yml
        var_files: [vars/vars-0.0.1.yml]


  - name: build-dillo-bot-resource-image
    <<: *default_job_config
    plan:
      - get: openjdk-14.0.2-slim-trigger
        trigger: true

      - get: time-trigger
        trigger: true

      - get: dillo-bot

      - put: dillo-bot-resource-image
        params:
          build: dillo-bot/cicd/docker/image_resources/dillo-bot

  - name: build-general-resource-image
    <<: *default_job_config
    plan:
      - get: debian-stable-slim-trigger
        trigger: true

      - get: dillo-bot

      - put: general-resource-image
        params:
          build: dillo-bot/cicd/docker/image_resources/general


  # - name: lint-dillo-bot
  #   <<: *default_job_config
  #   plan:
  #     - get: dillo-bot-resource-image
  #       passed: [build-dillo-bot-resource-image]

  #     - get: dillo-bot
  #       passed: [update-pipeline]
  #       trigger: true
      
  #     - task: update-lockfiles
  #       file: dillo-bot/cicd/tasks/update-lockfiles.yml

  #     - task: lint-ui
  #       file: dillo-bot/cicd/tasks/lint-ui.yml

  #     - put: dillo-bot
  #       params:
  #         repository: linted-dillo-bot


  - name: test-dillo-bot
    <<: *default_job_config
    plan:
      - get: dillo-bot-resource-image
        passed: [build-dillo-bot-resource-image]
      
      - get: dillo-bot
        passed: [update-pipeline]
        trigger: true

      - task: unit-test
        file: dillo-bot/cicd/tasks/unit-test.yml
        params: *test_env_vars
        on_failure:
          put: notify
          params:
            channel: ((concourse.discord.channel))
            title: FAIL
            message: The new DilloBot failed his tests


  - name: test-dillo-bot-ui
    <<: *default_job_config
    plan:
      - get: dillo-bot-resource-image
        passed: [build-dillo-bot-resource-image]
      
      - get: dillo-bot
        passed: [update-pipeline]
        trigger: true

      - task: unit-test-ui
        file: dillo-bot/cicd/tasks/unit-test-ui.yml
        on_failure:
          put: notify
          params:
            channel: ((concourse.discord.channel))
            title: FAIL
            message: The new DilloBot's ui failed its tests


  - name: build-dillo-bot
    <<: *default_job_config
    on_failure:
      put: notify
      params:
        channel: ((concourse.discord.channel))
        title: FAIL
        message: Failed to build new DilloBot
    plan:
      - get: dillo-bot-resource-image
        passed: [test-dillo-bot, test-dillo-bot-ui]

      - get: dillo-bot
        passed: [test-dillo-bot, test-dillo-bot-ui]
        trigger: true

      - get: version
        params:
          bump: patch

      - try:
          task: build-ui
          file: dillo-bot/cicd/tasks/build-ui.yml
          on_failure:
            put: notify
            params:
              channel: ((concourse.discord.channel))
              title: WARN
              message: Failed to build new DilloBot-d's ui

      - task: build-jar
        file: dillo-bot/cicd/tasks/build-jar.yml
        params: *env_vars

      - put: version
        params:
          file: version/version

      - put: dillo-bot-bucket
        params:
          file: target/dillo-bot*.jar


  - name: containerize-dillo-bot
    <<: *default_job_config
    on_failure:
      put: notify
      params:
        channel: ((concourse.discord.channel))
        title: FAIL
        message: New DilloBot could not be contained
    plan:
      - get: dillo-bot
        passed: [test-dillo-bot, test-dillo-bot-ui]
        trigger: true

      - get: version
        params:
          bump: patch

      - put: dillo-bot-image
        params:
          build: dillo-bot/
          tag_as_latest: true
          tag_file: version/version


  - name: release-dillo-bot
    <<: *default_job_config
    on_success:
      put: notify
      params:
        channel: ((concourse.discord.channel))
        title: SUCCESS
        message: New DilloBot was released
    plan:
      - get: dillo-bot
        passed: [build-dillo-bot]
        trigger: true

      - get: dillo-bot-bucket
        passed: [build-dillo-bot]
        trigger: true

      - get: version
        passed: [build-dillo-bot, containerize-dillo-bot]

      - put: dillo-bot-release
        params:
          name: version/version
          tag: version/version
          globs: [dillo-bot-bucket/*.jar]


  - name: run-dillo-bot
    <<: *default_job_config
    on_failure:
      put: notify
      params:
        channel: ((concourse.discord.channel))
        title: FAIL
        message: Could not get new DilloBot to run on server
    plan:
      - get: dillo-bot
        passed: [containerize-dillo-bot]

      - get: dillo-bot-image
        passed: [containerize-dillo-bot]
      
      - get: general-resource-image
        passed: [build-general-resource-image]

      - get: version
        params:
          bump: minor

      - put: version
        params:
          file: version/version

      - task: create-key
        file: dillo-bot/cicd/tasks/create-key.yml
        params:
          KEY: ((aws.ec2.key))

      - task: stop-container
        file: dillo-bot/cicd/tasks/stop-container.yml
        params: *ssh_creds

      - task: start-container
        file: dillo-bot/cicd/tasks/start-container.yml
        params:
          <<: *ssh_creds
          <<: *env_vars
  
  - name: smoke-test-dillo-bot
    <<: *default_job_config
    on_success:
      put: notify
      params:
        channel: ((concourse.discord.channel))
        title: SUCCESS
        message: New DilloBot is up and running!
    on_failure:
      do:
        - put: notify
          params:
            channel: ((concourse.discord.channel))
            title: FAIL
            message: New DilloBot failed smoke test, shutting him down
        
        - task: stop-container
          file: dillo-bot/cicd/tasks/stop-container.yml
          params: *ssh_creds
    plan:
      - get: dillo-bot
        passed: [run-dillo-bot]
        trigger: true

      - get: general-resource-image
        passed: [run-dillo-bot]

      - task: create-key
        file: dillo-bot/cicd/tasks/create-key.yml
        params:
          KEY: ((aws.ec2.key))

      - task: smoke-test
        file: dillo-bot/cicd/tasks/smoke-test.yml
        params:
          URL: ((aws.ec2.ipv4_address)):8081
